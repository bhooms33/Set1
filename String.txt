package JAN2021;

import java.util.Scanner;

public class PS01DupCharacters {
	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String str = sc.nextLine();
		
		char a = 0;
		for (int i = 0; i < str.length(); i++) {

			for (int j = i+1; j < str.length(); j++) {

				if (str.charAt(i) == str.charAt(j)) {
					a=str.charAt(i);
					System.out.println("The char repeated is : "+a);
				}
			}
		}
		
		
	}

}






package JAN2021;

import java.util.Scanner;

public class PS02Anagram {
	public static void main(String[] args) {
        
		Scanner sc= new Scanner(System.in); 
		System.out.print("Enter a string: ");  
		String str= sc.nextLine(); 
		int count=0;
		String s="";
		for (int i = 0; i < str.length(); i++) {
			if(str.charAt(i)==' ') {
				count++;
			}
		}
		String[] words=new String[count+1];
		int j=0;
		for (int i = 0; i < str.length(); i++) {
			char ch=str.charAt(i);
			if(ch==32) {
				words[j]=s;
				j++;
				s="";
			}
			else if(i==str.length()-1) {
				s+=ch;
				words[j]=s;
			}
			else {
				s+=str.charAt(i);
			}
		}
		for (int i = 0; i < words.length; i++) {

			System.out.println(words[i]);
		}
		  
	        
	}
}


package JAN2021;

import java.util.Scanner;

public class PS03Nonrepeat {
	static final int NO_OF_CHARS = 256;
	static char count[] = new char[NO_OF_CHARS];

	static void getCharCountArray(String str) {
		for (int i = 0; i < str.length(); i++) {
			count[str.charAt(i)]++;
		}

	}

	static int firstNonRepeating(String str) {
		getCharCountArray(str);
		int index = -1, i;

		for (i = 0; i < str.length(); i++) {
			if (count[str.charAt(i)] == 1) {
				index = i;
				break;
			}
		}

		return index;
	}

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String str = sc.nextLine();
		int index = firstNonRepeating(str);

		System.out.println(index == -1 ? "Either all characters are repeating or string " + "is empty"
				: "First non-repeating character is " + str.charAt(index));
	}
}



package JAN2021;

import java.util.Scanner;

public class PS04StringRev {
	static String rev = "";

	public static void reverse(String str) {
		for (int i = str.length() - 1; i >= 0; i--) {

			rev = rev + str.charAt(i);

		}
		System.out.println(rev);
	}

	public static void reverse1(String str) {
		if ((str == null) || (str.length() <= 1))
			System.out.println(str);
		else {
			System.out.print(str.charAt(str.length() - 1));
			reverse(str.substring(0, str.length() - 1));
		}
	}

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String str = sc.nextLine();
		reverse(str);
	}
}







package JAN2021;

import java.util.Scanner;

public class PS05ISDigit {
	static int flag = 0;

	public static void onlyDigits(String str, int n) {
		for (int i = 0; i < n; i++) {

			if (str.charAt(i) >= '0' && str.charAt(i) <= '9') {
				flag = 1;
			} else {
				if(flag!=1)
				flag = 0;
			}

		}
		if (flag == 1) {
			System.out.println(" DIGIT IS PRESENT");
		} else {
			System.out.println("Not Present");
		}

	}

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String str = sc.nextLine();
		int len = str.length();

		// Function Call
		onlyDigits(str, len);
	}
}




package JAN2021;

import java.util.Scanner;

public class PS06DupCharCount {
	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String str = sc.nextLine();
		int len = str.length();
		char[] arr = new char[str.length()];
		for (int i = 0; i < str.length(); i++) {
			arr[i] = str.charAt(i);
		}
		int count;
		System.out.println("Duplicate characters in a given string: ");

		for (int i = 0; i < arr.length; i++) {
			count = 1;
			for (int j = i + 1; j < arr.length; j++) {
				if (arr[i] == arr[j] && arr[i] != ' ') {
					count++;

					arr[j] = '0';
				}
			}

			if (count > 1 && arr[i] != '0')
				System.out.println(arr[i] + ": " + count);
		}
	}
}




package JAN2021;

import java.util.Scanner;

public class PS07VoWConst {
	 public static String toLowerCase(String a){
		 char aChar = 0;  String a1=" ";
         for (int i = 0; i< a.length(); i++){

             aChar = a.charAt(i);
             if (65 <= aChar && aChar<=90){
                 aChar = (char)( (aChar + 32) ); 
             }

            // System.out.print(aChar);
             a1=a1 + aChar;
             
         }
         System.out.println(a1);
		return a1;
	 }
	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String s = sc.nextLine();
		String str=toLowerCase(s);
		int vCount = 0, cCount = 0;  
		for(int i = 0; i < str.length(); i++) {  
           
            if(str.charAt(i) == 'a' || str.charAt(i) == 'e' || str.charAt(i) == 'i' || str.charAt(i) == 'o' || str.charAt(i) == 'u') {  
               
                vCount++;  
            }  
           
            else if(str.charAt(i) >= 'a' && str.charAt(i)<='z') {    
               
                cCount++;  
            }  
        }  
        System.out.println("Number of vowels: " + vCount);  
        System.out.println("Number of consonants: " + cCount);  
	}
}








package JAN2021;

import java.util.Scanner;

public class PS08CountGivenChar {
	public static int count(String s, char c) {
		int count = 0;

		for (int i = 0; i < s.length(); i++) {
			
			if (s.charAt(i) == c)
				count++;
		}
		return count;
	}

	// Driver method
	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String str = sc.nextLine();
		System.out.println("Enter the character to get the count");
		char c=sc.next().charAt(0);
		System.out.println("The char-"+c+" is repeated: "+count(str, c)+" times");
	}
}






package JAN2021;

import java.util.Scanner;

public class PS09StringToInt {
	public static int stringtoint(String s){      
	    boolean isNegative=false;
	    int number =0;      
	    if (s.charAt(0)=='-') {
	        isNegative=true;            
	    }else{
	        number = number* 10 + s.charAt(0)-'0';
	    }

	    for (int i = 1; i < s.length(); i++) {

	        number = number*10 + s.charAt(i)-'0';           
	    }
	    if(isNegative){
	        number = 0-number;
	    }
	    return number;
	}
	public static int myStringToInteger(String str) {
	    int answer = 0, factor = 1;
	    for (int i = str.length()-1; i >= 0; i--) {
	        answer += (str.charAt(i) - '0') * factor;
	        factor *= 10;
	    }
	    return answer;
	}
	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String s = sc.nextLine();
		int a= stringtoint(s);
		System.out.println(a);
	}
}





package JAN2021;

import java.util.Scanner;

public class PS10ReplaceGivenChar {

	public static void main(String[] args) {
		// char w='%';
		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String s = sc.nextLine();
		// convert into char array and try chcanging
		int len = s.length();
		char[] arr = new char[s.length()];
		for (int i = 0; i < s.length(); i++) {
			arr[i] = s.charAt(i);
		}

		System.out.println("Enter the character to replace");
		char w1 = sc.next().charAt(0);

		System.out.println(w1);
		for (int j = 0; j < s.length(); j++) {
			if (arr[j] == ' ') {
				arr[j] = w1;
			}

		}

		System.out.println(arr);

	}
}








package JAN2021;

import java.util.Scanner;

public class PS11Permutation {

	public static void findPermutation(char[] arr, int i) {
		if (i == arr.length - 1) {
			String str = "";
			for (int j = 0; j < arr.length; j++) {
				str = str + arr[j];
			}
			System.out.println(str);
		} else {
			for (int j = i; j < arr.length; j++) {
				char tmp = arr[i];
				arr[i] = arr[j];
				arr[j] = tmp;
				findPermutation(arr, i + 1);
				char tmp1 = arr[i];
				arr[i] = arr[j];
				arr[j] = tmp1;
			}
		}
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String s = sc.nextLine();
		char[] arr = new char[s.length()];
		for (int i = 0; i < s.length(); i++) {
			arr[i] = s.charAt(i);
		}
		findPermutation(arr, 0);
	}

}





package JAN2021;

import java.util.Scanner;

public class PS12ReverseString {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String str = sc.nextLine();
		int count = 0;
		String s = "";
		for (int i = 0; i < str.length(); i++) {
			if (str.charAt(i) == ' ') {
				count++;
			}
		}
		String[] words = new String[count + 1];
		int j = 0;
		for (int i = 0; i < str.length(); i++) {
			char ch = str.charAt(i);
			if (ch == 32) {
				words[j] = s;
				j++;
				s = "";
			} else if (i == str.length() - 1) {
				s += ch;
				words[j] = s;
			} else {
				s += str.charAt(i);
			}
		}
		/*
		 * for (int i = 0; i < words.length; i++) {
		 * 
		 * System.out.println(words[i]); }
		 */
		for (int i = words.length - 1; i >= 0; i--) {
			System.out.print(words[i] + " ");
		}
	}
}





package JAN2021;

import java.util.Scanner;

public class PS13Palindrome {
	static boolean isPalindrome(String str) {
		int i = 0, j = str.length() - 1;
		while (i < j) {
			if (str.charAt(i) != str.charAt(j))
				return false;
			i++;
			j--;
		}
		return true;
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String str = sc.nextLine();

		if (isPalindrome(str))
			System.out.print("Yes");
		else
			System.out.print("No");
	}
}





package JAN2021;

import java.util.Scanner;

public class PS14RemoveDuplicates {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String input = sc.nextLine();

		String output = " ";

		boolean repeatedChar;
		for (int i = 0; i < input.length(); i++) {
			repeatedChar = false;
			for (int j = i + 1; j < input.length(); j++) {
				if (input.charAt(i) == input.charAt(j)) {
					repeatedChar = true;
					break;
				}

			}
			if (!repeatedChar) {
				output = output + input.charAt(i);
			}

		}
		System.out.println(output);
	}
}






package JAN2021;

import java.util.Scanner;

public class PS17HighestOccured {
	 static char getMaxOccuringChar(String str) 
	    { 
	        // Create array to keep the count of individual 
	        // characters and initialize the array as 0 
	        int count[] = new int[256]; 
	       
	        // Construct character count array from the input 
	        // string. 
	        int len = str.length(); 
	        for (int i=0; i<len; i++) {
	            count[str.charAt(i)]++; 
	        System.out.println(count[str.charAt(i)]);
	        }
	       
	        int max = -1;  // Initialize max count 
	        char result = ' ';   // Initialize result 
	       
	        // Traversing through the string and maintaining 
	        // the count of each character 
	        for (int i = 0; i < len; i++) { 
	            if (max < count[str.charAt(i)]) { 
	                max = count[str.charAt(i)]; 
	                result = str.charAt(i); 
	            } 
	        } 
	       
	        return result; 
	    } 
	 
	 public static void main(String[] args) {

			Scanner sc = new Scanner(System.in);
			System.out.print("Enter a string: ");
			String str = sc.nextLine();
			System.out.println("Max occurring character is " + getMaxOccuringChar(str)); 
	 }
}






package JAN2021;

import java.util.Scanner;

public class PS18RemoveGivenChar {
	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String input = sc.nextLine();
		System.out.println("Enter the char to be removed");
		char r=sc.next().charAt(0);
		String output = " ";

		int flag=0;
		for (int i = 0; i < input.length(); i++) 
			{
				if (input.charAt(i) != r) {
					output = output + input.charAt(i); 
			
				}
		}
		System.out.println(output);
	}
}




package JAN2021;

import java.util.Scanner;

public class PS19LongPalindrome {
	static void printSubStr(String str, int low, int high) {
		System.out.println(str.substring(low, high + 1));
	}

	static int longestPalSubstr(String str) {

		int maxLength = 1;

		int start = 0;
		int len = str.length();

		int low, high;

		for (int i = 1; i < len; ++i) {
			low = i - 1;
			high = i;
			while (low >= 0 && high < len && str.charAt(low) == str.charAt(high)) {
				if (high - low + 1 > maxLength) {
					start = low;
					maxLength = high - low + 1;
				}
				--low;
				++high;
			}
			low = i - 1;
			high = i + 1;
			while (low >= 0 && high < len && str.charAt(low) == str.charAt(high)) {
				if (high - low + 1 > maxLength) {
					start = low;
					maxLength = high - low + 1;
				}
				--low;
				++high;
			}
		}

		System.out.print("Longest palindrome substring is: ");
		printSubStr(str, start, start + maxLength - 1);

		return maxLength;
	}

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String str = sc.nextLine();
		System.out.println("Length is: " + longestPalSubstr(str));
	}
}






package JAN2021;

import java.util.Scanner;

public class PS20SortStringLen {
	static void sort(String[] s, int n) {
		for (int i = 1; i < n; i++) {
			String temp = s[i];

			int j = i - 1;
			while (j >= 0 && temp.length() < s[j].length()) {
				s[j + 1] = s[j];
				j--;
			}
			s[j + 1] = temp;
		}

		for (int i = 0; i < n; i++)
			System.out.print(s[i] + " ");
	}

	public static void StringToStringArray(String str) {
		int count = 0;
		String s = "";
		for (int i = 0; i < str.length(); i++) {
			if (str.charAt(i) == ' ') {
				count++;
			}
		}
		String[] words = new String[count + 1];
		int j = 0;
		for (int i = 0; i < str.length(); i++) {
			char ch = str.charAt(i);
			if (ch == 32) {
				words[j] = s;
				j++;
				s = "";
			} else if (i == str.length() - 1) {
				s += ch;
				words[j] = s;
			} else {
				s += str.charAt(i);
			}
		}

		/*
		 * for (int i = 0; i < words.length; i++) {
		 * 
		 * System.out.println(words[i]); }
		 */
		int n = words.length;

		sort(words, n);
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a string: ");
		String str = sc.nextLine();
		StringToStringArray(str);

	}

}







package JAN2021;

import java.util.Scanner;

public class PS21Occurence {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("enter the string");
		String input = sc.nextLine();
		System.out.println("enter the character to find second the occurance of character");
		char ch = sc.next().charAt(0);
		int count = 0;
		int index = 0;
		for (int i = 0; i < input.length(); i++) {
			char ch1 = input.charAt(i);
			if (ch1 == ch) {
				count = count + 1;
				if (count == 2) {
					index = i;
					break;
				}
			}
		}
		index = index + 1;
		System.out.println("the required character is found at index=>" + index);
	}
}
