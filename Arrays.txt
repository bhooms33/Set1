package JAN2021;

import java.util.Scanner;

//How to find duplicate number on Integer array in Java?
public class P1DupArrays {

	public static void main(String[] args) {

		// Initialize array
		Scanner sc = new Scanner(System.in);
		System.out.print(" Please Enter Number of elements in an array : ");
		int n = sc.nextInt();
		int[] arr = new int[n];
		System.out.print(" Please Enter array : ");
		for (int i = 0; i < n; i++)

		{
			arr[i] = sc.nextInt();

		}

		System.out.println("Duplicate elements in given array: ");
		// Searches for duplicate element
		for (int x = 0; x < arr.length; x++) {
			for (int j = x + 1; j < arr.length; j++) {
				if (arr[x] == arr[j])
					System.out.println("The duplicate number is: " + arr[x]);
			}

		}
	}
}











package JAN2021;

import java.util.Scanner;
//How to check if String array contains a single digit number in Java?
public class P2StringDigit {
	static Boolean bool = false;
	static char s;

	public static void onlyDigits(String[] input, int n) {
		for (int i = 0; i < n; i++) {
			String w = input[i];
			w.length();
			for (int j = 0; j < w.length(); j++) {
				if (input[i].charAt(j) >= '0' && input[i].charAt(j) <= '9') {
					bool = true;
					s = input[i].charAt(j);
					System.out.println("The digits are: " + s);
				} else {
					bool = false;
				}
			}
		}

	}

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a number of strings: ");
		int q = sc.nextInt();
		String[] str = new String[q];
		System.out.println("Enter the string");
		for (int i = 0; i < q; i++) {
			str[i] = sc.next();
		}

		// for(int i=0;i<q;i++) {
		// System.out.println(str[i]);
		// }
		onlyDigits(str, q);
	}
}





package JAN2021;

import java.util.Scanner;

//How to find largest and smallest number in unsorted array?
public class P3UnSortedMINMAX {
	public static void MinMax(int[] inArray, int arraySize) {

		int min = inArray[0];
		int max = inArray[0];

		for (int i = 0; i < arraySize; i++) {

			if (inArray[i] > max) {
				max = inArray[i];
			}

			if (inArray[i] < min) {
				min = inArray[i];
			}
		}
		System.out.println("The smallest number in the input array is: " + min);
		System.out.println("The largest number in the input array is: " + max);
	}

	public static void main(String[] args) {

		// Initialize array
		Scanner sc = new Scanner(System.in);
		int even = 1, odd = 0;
		System.out.print(" Please Enter Number of elements in an array : ");
		int n = sc.nextInt();
		int[] arr = new int[n];
		System.out.print(" Please Enter array  : ");
		for (int i = 0; i < n; i++)

		{
			arr[i] = sc.nextInt();

		}
		int len = arr.length;
		MinMax(arr, len);
	}

}




package JAN2021;

import java.util.Scanner;

//How to find all pairs on integer array whose sum is equal to given number?
public class P5GivenSum {

	public static void getPairs(int[] arr, int sum) {

		int count = 0;

		for (int i = 0; i < arr.length; i++) {
			for (int j = i + 1; j < arr.length; j++) {
				if ((arr[i] + arr[j]) == sum) {
					System.out.println("The pais are: (" + arr[i] + "," + arr[j] + ")");
				}
			}
		}

	}

	public static void main(String[] args) {

		// Initialize array
		Scanner sc = new Scanner(System.in);
		int even = 1, odd = 0;
		System.out.print(" Please Enter Number of elements in an array : ");
		int n = sc.nextInt();
		int[] arr = new int[n];

		System.out.print(" Please Enter array  : ");
		for (int i = 0; i < n; i++)

		{
			arr[i] = sc.nextInt();

		}
		System.out.println("Given sum number is ");
		int sum = sc.nextInt();
		getPairs(arr, sum);
	}
}






package JAN2021;

import java.util.Scanner;
//How to find repeated strings in an array if it contains multiple duplicates?
public class P6DupString {

	public static void StringDuplicates(String[] input) {
		for (int i = 0; i < input.length - 1; i++) {
			String w = input[i];
			String u = input[i + 1];
			if (w.equals(u)) {
				System.out.println("The Duplicated words are: " + w);
			}

		}

	}

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		System.out.print("Enter a number of strings: ");
		int q = sc.nextInt();
		String[] str = new String[q];
		System.out.println("Enter the string");
		for (int i = 0; i < q; i++) {
			str[i] = sc.next();
		}

		StringDuplicates(str);
	}

}




package JAN2021;

import java.util.Scanner;
//Write a program to remove duplicates from array in Java?
public class P7RemoveDup {

	static void unique_array(int[] my_array) {
		System.out.println("Original Array : ");

		for (int i = 0; i < my_array.length; i++) {
			System.out.print(my_array[i] + "\t");
		}

		int len = my_array.length;

		for (int i = 0; i < len; i++) {
			for (int j = i + 1; j < len; j++) {

				if (my_array[i] == my_array[j]) {

					my_array[j] = my_array[len - 1];

					len--;

					j--;
				}
			}
		}
		int[] array1 = new int[len];

		for (int x = 0; x < len; x++) {
			array1[x] = my_array[x];
		}

		System.out.println();

		System.out.println("Array with unique values : ");

		for (int i = 0; i < array1.length; i++) {
			System.out.print(array1[i] + "\t");
		}

		System.out.println();

		System.out.println("---------------------------");
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print(" Please Enter Number of elements in an array : ");
		int n = sc.nextInt();
		int[] arr = new int[n];
		System.out.print(" Please Enter array : ");
		for (int i = 0; i < n; i++)

		{
			arr[i] = sc.nextInt();

		}
		unique_array(arr);

	}
}




package JAN2021;

import java.util.Scanner;

public class P9Intersection {

	static void printIntersection(int arr1[], int arr2[], int n1, int n2) {
		int i = 0, j = 0;
		while (i < n1 && j < n2) {
			if (arr1[i] < arr2[j])
				i++;
			else if (arr2[j] < arr1[i])
				j++;
			else {
				System.out.print(arr2[j++] + " ");
				i++;
			}
		}
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print(" Please Enter Number of elements in an array1 : ");
		int n1 = sc.nextInt();
		int[] arr1 = new int[n1];
		System.out.print(" Please Enter array : ");
		for (int i = 0; i < n1; i++)

		{
			arr1[i] = sc.nextInt();

		}
		System.out.print(" Please Enter Number of elements in an array2 : ");
		int n2 = sc.nextInt();
		int[] arr2 = new int[n2];
		System.out.print(" Please Enter array2 : ");
		for (int i = 0; i < n2; i++)

		{
			arr2[i] = sc.nextInt();

		}
		printIntersection(arr1, arr2, n1, n2);

	}
}






package JAN2021;

import java.util.Scanner;

//How to find kth smallest element in unsorted array?
public class PA11KthSmallest {

	public static int kthSmallest(int[] arr, int k) {
		int n = arr.length;
		for (int i = 0; i < n - 1; i++) {
			for (int j = 0; j < n - i - 1; j++)
				if (arr[j] > arr[j + 1]) {
					int temp = arr[j];
					arr[j] = arr[j + 1];
					arr[j + 1] = temp;
				}
		}
		return arr[k - 1];

	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print(" Please Enter Number of elements in an array : ");
		int n = sc.nextInt();
		int[] arr = new int[n];
		System.out.print(" Please Enter array : ");
		for (int i = 0; i < n; i++)

		{
			arr[i] = sc.nextInt();

		}
		System.out.println("Enter the kth Element");
		int k = sc.nextInt();
		System.out.print(k+"'th smallest element is " + kthSmallest(arr, k));
	}
}




package JAN2021;
import java.util.Scanner;
public class PA12KthLargest {
	//How to find  kthLarges element in unsorted array?
	

		public static int kthLargest(int[] arr, int k) {
			int n = arr.length;
			for (int i = 0; i < n - 1; i++) {
				for (int j = 0; j < n - i - 1; j++)
					if (arr[j] > arr[j + 1]) {
						int temp = arr[j];
						arr[j] = arr[j + 1];
						arr[j + 1] = temp;
					}
			}
			return arr[n- k];

		}

		public static void main(String[] args) {
			Scanner sc = new Scanner(System.in);
			System.out.print(" Please Enter Number of elements in an array : ");
			int n = sc.nextInt();
			int[] arr = new int[n];
			System.out.print(" Please Enter array : ");
			for (int i = 0; i < n; i++)

			{
				arr[i] = sc.nextInt();

			}
			System.out.println("Enter the kth Element");
			int k = sc.nextInt();
			System.out.print(k+"'th Largest element is " + kthLargest(arr, k));
		}
	}





package JAN2021;

import java.util.Scanner;
///How find the first repeating element in an array of integers?
public class PA14FirstRepeat {
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		System.out.print(" Please Enter Number of elements in an array : ");
		int n = sc.nextInt();
		int[] arr = new int[n];
		System.out.print(" Please Enter array : ");
		for (int i = 0; i < n; i++)

		{
			arr[i] = sc.nextInt();

		}
		
		int index,ele = 0;
		index=-1;
		
		for(int i=0; i<n; i++)
		{
			for(int j=i+1; j<n; j++)
			{
				if(arr[i]==arr[j])
				{
					ele=arr[i];
					index=i;
					break;
				}				
			}
			
			if(index != -1)
				break;
		}
		if(index!=-1)
			System.out.println("First repeated element: "+ele);
		else
			System.out.println("There is no repeated element\n");
		     
	
	}
		 
}
	




package JAN2021;

import java.util.Scanner;

public class PA15FirstNonRepeat {
	  static int firstNonRepeating(int arr[], int n) 
	    { 
	        for (int i = 0; i < n; i++) { 
	            int j; 
	            for (j = 0; j < n; j++) 
	                if (i != j && arr[i] == arr[j]) 
	                    break; 
	            if (j == n) 
	                return arr[i]; 
	        } 
	  
	        return -1; 
	    } 
public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		System.out.print(" Please Enter Number of elements in an array : ");
		int n = sc.nextInt();
		int[] arr = new int[n];
		System.out.print(" Please Enter array : ");
		for (int i = 0; i < n; i++)

		{
			arr[i] = sc.nextInt();

		}
		   int n1 = arr.length; 
		   
	        System.out.print(firstNonRepeating(arr, n1)); 
}
}






package JAN2021;

import java.util.Scanner;

public class PA17SubsetSum {
	public static int findSmallest(int arr[], int n)  
	    { 
	        int res = 1; 
	
// Traverse the array and increment 'res' if arr[i] is  smaller than or equal to 'res'. 
	        for (int i = 0; i < n && arr[i] <= res; i++) 
	            res = res + arr[i]; 
	  
	        return res; 
	    } 

public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		System.out.print(" Please Enter Number of elements in an array : ");
		int n = sc.nextInt();
		int[] arr = new int[n];
		System.out.print(" Please Enter array : ");
		for (int i = 0; i < n; i++)

		{
			arr[i] = sc.nextInt();

		}
		   int n1 = arr.length; 
		   System.out.println(findSmallest(arr, n1)); 
}
}




package JAN2021;

import java.util.Scanner;

public class PA18PosNeg {
	public static   void rightrotate(int arr[], int n, int outofplace,
              int cur)
{
 int tmp = arr[cur];
 for (int i = cur; i > outofplace; i--)
     arr[i] = arr[i - 1];
 arr[outofplace] = tmp;
}

public static void rearrange(int arr[], int n)
{
 int outofplace = -1;

 for (int index = 0; index < n; index++) 
 {
     if (outofplace >= 0) 
     {
         // find the item which must be moved into
         // the out-of-place entry if out-of-place
         // entry is positive and current entry is
         // negative OR if out-of-place entry is
         // negative and current entry is negative
         // then right rotate
         //
         // [...-3, -4, -5, 6...] -->   [...6, -3,
         // -4, -5...]
         //      ^                          ^
         //      |                          |
         //     outofplace      -->      outofplace
         //
         if (((arr[index] >= 0)
              && (arr[outofplace] < 0))
             || ((arr[index] < 0)
                 && (arr[outofplace] >= 0))) {
             rightrotate(arr, n, outofplace, index);

             // the new out-of-place entry is now 2
             // steps ahead
             if (index - outofplace >= 2)
                 outofplace = outofplace + 2;
             else
                 outofplace = -1;
         }
     }

     // if no entry has been flagged out-of-place
     if (outofplace == -1) 
     {
         // check if current entry is out-of-place
         if (((arr[index] >= 0)
              && ((index & 0x01) == 0))
             || ((arr[index] < 0)
                 && (index & 0x01) == 1))
             outofplace = index;
     }
 }
}


public static void printArray(int arr[], int n)
{
 for (int i = 0; i < n; i++)
     System.out.print(arr[i] + " ");
 System.out.println("");
}

public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		System.out.print(" Please Enter Number of elements in an array : ");
		int n1 = sc.nextInt();
		int[] arr = new int[n1];
		System.out.print(" Please Enter array : ");
		for (int i = 0; i < n1; i++)

		{
			arr[i] = sc.nextInt();

		}
		int n = arr.length;
		 
        System.out.println("Given array is ");
     printArray(arr, n);
     rearrange(arr, n);
     
     System.out.println("RearrangeD array is ");
    printArray(arr, n);
}
}





package JAN2021;

import java.util.Scanner;

public class PA19SubarraySum {
	static int flag;
	public static	 void print(int[] arr, int i,int  j) {
		   int k = 0;
		
		  
		   System.out.println("The subarray is :");
		   for (k = i; k <= j; k += 1) {
		     System.out.println(arr[k]);
		   }
		   
}
public static void subArrayExists(int[] arr, int sum) {
		 int n = arr.length;
		  int i;
		  int j;
		  int sum_so_far;

		  for (i = 0; i<n; i+= 1) {
		    sum_so_far = 0;
		    for (j = i; j < n; j++) {
		      sum_so_far += arr[j];

		      if (sum_so_far == sum) {
		    	  print(arr, i, j);
		    	  flag=1;
		      }
		      else {
		    	 if(flag!=1) {
		    	  flag=0;
		    	 }
		      }
		    }
		  }
		  if(flag==0) {
			  System.out.println("No subsets found");
		  }
		
}

public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		System.out.print(" Please Enter Number of elements in an array : ");
		int n1 = sc.nextInt();
		int[] arr = new int[n1];
		System.out.print(" Please Enter array : ");
		for (int i = 0; i < n1; i++)

		{
			arr[i] = sc.nextInt();

		}
		int n = arr.length;
		
		 subArrayExists(arr,0); 
           
}


}




package JAN2021;

import java.util.Scanner;

public class PA20RemoveDup {
	public static int removeDuplicateElements(int arr[], int n) {
		if (n == 0 || n == 1) {
			return n;
		}
		int j = 0;// for next element
		for (int i = 0; i < n - 1; i++) {
			if (arr[i] != arr[i + 1]) {
				arr[j++] = arr[i];
			}
		}
		arr[j++] = arr[n - 1];
		return j;
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print(" Please Enter Number of elements in an array : ");
		int n = sc.nextInt();
		int[] arr = new int[n];
		System.out.print(" Please Enter array : ");
		for (int i = 0; i < n; i++)

		{
			arr[i] = sc.nextInt();

		}
		int length = arr.length;
		length = removeDuplicateElements(arr, length);
		// printing array elements
		for (int i = 0; i < length; i++)
			System.out.print(arr[i] + " ");

	}
}




package JAN2021;

import java.util.Scanner;

public class PA21RemoveSpecificEle {
	public static void removeTheElement(int[] arr, int index) {
		
		int[] anotherArray = new int[arr.length-1 ];

		for (int i = 0,k=0; i < arr.length; i++) {

			if (arr[i] == index) {
				continue;
			}
			else {
			anotherArray[k++] = arr[i];
		}	
		}
		System.out.println("Resultant array  ");
		for (int i1 = 0; i1 < anotherArray.length; i1++) {
			System.out.print(anotherArray[i1] + "\t");
		}
	
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print(" Please Enter Number of elements in an array : ");
		int n = sc.nextInt();
		int[] arr = new int[n];
		System.out.print(" Please Enter array : ");
		for (int i = 0; i < n; i++)

		{
			arr[i] = sc.nextInt();

		}
		System.out.println("Enter the element to be removed");
		int ele = sc.nextInt();
		System.out.println("Original Array : ");

		for (int i = 0; i < arr.length; i++) {
			System.out.print(arr[i] + "\t");
		}
		System.out.println();
		 removeTheElement(arr, ele);

	}

}




package JAN2021;

import java.util.Scanner;

public class PA22MergeSortAray {
	public static void mergeArrays(int[] arr1, int[] arr2, int n1, int n2, int[] arr3) {
		int i = 0, j = 0, k = 0;

		while (i < n1 && j < n2) {
			if (arr1[i] < arr2[j])
				arr3[k++] = arr1[i++];
			else
				arr3[k++] = arr2[j++];
		}

		while (i < n1)
			arr3[k++] = arr1[i++];

		while (j < n2)
			arr3[k++] = arr2[j++];
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print(" Please Enter Number of elements in an array1 : ");
		int n1 = sc.nextInt();
		int[] arr1 = new int[n1];
		System.out.print(" Please Enter array1 : ");
		for (int i = 0; i < n1; i++)

		{
			arr1[i] = sc.nextInt();

		}
		System.out.print(" Please Enter Number of elements in an array2 : ");
		int n2 = sc.nextInt();
		int[] arr2 = new int[n2];
		System.out.print(" Please Enter array1 : ");
		for (int i = 0; i < n2; i++)

		{
			arr2[i] = sc.nextInt();

		}
		int[] arr3 = new int[n1 + n2];

		mergeArrays(arr1, arr2, n1, n2, arr3);

		System.out.println("Array after merging");
		for (int i = 0; i < n1 + n2; i++)
			System.out.print(arr3[i] + " ");
	}

}




package JAN2021;

import java.util.Scanner;

public class PA23Maxsubarrya {
	 public static void main (String[] args) 
	 {
	 Scanner sc = new Scanner(System.in);
		System.out.print(" Please Enter Number of elements in an array : ");
		int n = sc.nextInt();
		int[] arr = new int[n];
		System.out.print(" Please Enter array : ");
		for (int i = 0; i < n; i++)

		{
			arr[i] = sc.nextInt();

		}
		  System.out.println("Maximum contiguous sum is " + 
                  maxSubArraySum(arr)); 
	 }
	    static int maxSubArraySum(int a[]) 
	    { 
	        int size = a.length; 
	        int max_so_far = Integer.MIN_VALUE, max_ending_here = 0; 
	  
	        for (int i = 0; i < size; i++) 
	        { 
	            max_ending_here = max_ending_here + a[i]; 
	            if (max_so_far < max_ending_here) 
	                max_so_far = max_ending_here; 
	            if (max_ending_here < 0) 
	                max_ending_here = 0; 
	        } 
	        return max_so_far; 
	    } 
}
